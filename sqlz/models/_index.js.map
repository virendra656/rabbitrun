{"version":3,"sources":["sqlz/models/_index.ts"],"names":[],"mappings":"AACA,MAAM,MAAM,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAA;AAE/C,MAAM,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AACnC,MAAM,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC,CAAA;AAC3C,MAAM,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAA;AAC1D,MAAM,sBAAsB,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAA;AAC9D,MAAM,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;AACzC,MAAM,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAA;AACtD,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAA;AAE1B,MAAM,QAAQ,GAAG;IACf,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU;IAChC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ;IAC9B,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ;IAC9B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI;IACtB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI;IACtB,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;IAC5B,OAAO,EAAE,IAAI;IACb,KAAK,EAAE,KAAK;IACZ,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ;CAC/B,CAAA;AACD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAMtB,MAAM,SAAS,GAAG,IAAI,SAAS,CAC7B,QAAQ,CAAC,UAAU,CAAC,EACpB,QAAQ,CAAC,UAAU,CAAC,EACpB,QAAQ,CAAC,UAAU,CAAC,EACpB,QAAQ,CAAC,CAAA;AAEX,MAAM,IAAI,GAAG,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;AAC5C,MAAM,QAAQ,GAAG,aAAa,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;AACpD,MAAM,eAAe,GAAG,oBAAoB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;AAClE,MAAM,iBAAiB,GAAG,sBAAsB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;AACtE,MAAM,OAAO,GAAG,YAAY,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;AACxD,MAAM,aAAa,GAAG,kBAAkB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;AAC9D,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAClC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAChC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAO9B,MAAM,CAAC,OAAO,GAAG;IACf,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,aAAa,EAAE,iBAAiB,EAAE,SAAS,EAAE,OAAO;CACtF,CAAA","file":"_index.js","sourcesContent":["\nconst config = require('../config/config.json')\n\nconst Sequelize = require('sequelize')\nconst UserModel = require('./user')\nconst CategoryModel = require('./category')\nconst CustomerProfileModel = require('./customer_profile')\nconst SocketConnectionsModel = require('./socket_connections')\nconst BookingModel = require('./booking')\nconst DriverProfileModel = require('./driver_profile')\nrequire('dotenv').config()\n\nconst dbConfig = {\n  username: process.env.dbusername,\n  password: process.env.password,\n  database: process.env.database,\n  host: process.env.host,\n  port: process.env.port,\n  dialect: process.env.dialect,\n  logging: true,\n  force: false,\n  timezone: process.env.timezone\n}\nconsole.log(dbConfig);\n\n\n\n\n\nconst sequelize = new Sequelize(\n  dbConfig['database'],\n  dbConfig['username'],\n  dbConfig['password'],\n  dbConfig)\n\nconst User = UserModel(sequelize, Sequelize)\nconst Category = CategoryModel(sequelize, Sequelize)\nconst CustomerProfile = CustomerProfileModel(sequelize, Sequelize)\nconst SocketConnections = SocketConnectionsModel(sequelize, Sequelize)\nconst Booking = BookingModel(sequelize, Sequelize, User)\nconst DriverProfile = DriverProfileModel(sequelize, Sequelize)\nSocketConnections.belongsTo(User);\nCustomerProfile.belongsTo(User);\nDriverProfile.belongsTo(User);\n\n/* sequelize.sync({ force: true })\n  .then(() => {\n    console.log(`Database & tables created!`)\n  }) */\n\nmodule.exports = {\n  User, CustomerProfile, Category, DriverProfile, SocketConnections, sequelize, Booking\n}"],"sourceRoot":"../../../src"}