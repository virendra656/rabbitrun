{"version":3,"sources":["dao/users.ts"],"names":[],"mappings":"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","file":"users.js","sourcesContent":["import * as uuid from 'uuid'\n\nconst { User, CustomerProfile, Category, DriverProfile } = require('../sqlz/models/_index');\nimport * as CryptoJS from 'crypto-js';\n\n\nconst sequelize = require('sequelize')\n\nexport function findCustomerByEmailOrPhone(user: any): Promise<any> {\n  return User.findOne({\n    raw: true,\n    limit: 1,\n    where: {\n\n      $or: [\n        {\n          email:\n          {\n            $eq: user.email.toLowerCase()\n          }\n        },\n        {\n          mobile:\n          {\n            $eq: user.mobile.replace(/ +?/g, '')\n          }\n        }\n      ]\n    },\n    order: [['createdAt', 'DESC']]\n  });\n}\n\nexport function login(user: any): Promise<any> {\n  return User.findOne({\n    raw: true,\n    limit: 1,\n    where: {\n      password: CryptoJS.SHA512(user.password, process.env.EncryptionKEY).toString(),\n      $or: [\n        {\n          email:\n          {\n            $eq: user.email_or_mobile.toLowerCase()\n          }\n        },\n        {\n          mobile:\n          {\n            $eq: user.email_or_mobile.replace(/ +?/g, '')\n          }\n        }\n      ]\n    },\n    order: [['createdAt', 'DESC']]\n  });\n}\n\nexport function getBusinessCategories(): Promise<any> {\n  return Category.findAll({\n    raw: true,\n    limit: 1,\n    where: {isActive:1},\n    order: [['createdAt', 'DESC']]\n  });\n}\n\nexport function findUserByOTP(user: any): Promise<any> {\n  let obj = user.verifyOTP ? {verifyOTP : user.verifyOTP} : {forgotPasswordOTP : user.forgotPasswordOTP} \n  return User.findOne({\n    raw: true,\n    limit: 1,\n    where: obj,\n    order: [['createdAt', 'DESC']]\n  });\n}\n\n\n\nexport function getDriverById(userId: number): Promise<any> {\n  return DriverProfile.findOne({\n    raw: true,\n    limit: 1,\n    where: {\n      userId,\n    },\n    attributes: ['name', 'latitude', 'longitude', 'businessType'],\n    order: [['createdAt', 'DESC']]\n  });\n}\n\nexport function getCustomerById(userId: number): Promise<any> {\n  return CustomerProfile.findOne({\n    raw: true,\n    limit: 1,\n    where: {\n      userId,\n    },\n    attributes: ['name', 'latitude', 'longitude', 'businessType'],\n    order: [['createdAt', 'DESC']]\n  });\n}\n\nexport function register(user: any): Promise<any> {\n  return User\n    .create({\n      email: user.email.toLowerCase(),\n      verifyOTP: user.verifyOTP,\n      isVerified: user.isVerified ? 1 : 0,\n      role: user.role ||  3,\n      mobile: user.mobile.replace(/ +?/g, ''),\n      password: CryptoJS.SHA512(user.password, process.env.EncryptionKEY).toString()\n    })\n}\n\nexport function updateDevice(user: any): Promise<any> {\n  return User.update(\n    { deviceType: user.deviceType, deviceToken: user.deviceToken },\n    { where: { id: user.id } }\n  );\n}\n\nexport function nearByDrivers(user: any): Promise<any> {\n  let lat = user.latitude;\n  let lng = user.latitude;\n  return DriverProfile.findAll({\n    attributes: [[sequelize.literal(\"6371 * acos(cos(radians(\"+lat+\")) * cos(radians(latitude)) * cos(radians(\"+lng+\") - radians(longitude)) + sin(radians(\"+lat+\")) * sin(radians(latitude)))\"),'distance'], 'name'],\n    order: sequelize.col('distance'),\n    limit: 10\n  });\n}\n\nexport function updateDriverLocation(user: any): Promise<any> {\n  return DriverProfile.update(\n    { latitude: user.latitude, longitude: user.longitude },\n    { where: { id: user.id } }\n  );\n}\n\n\n\nexport function updateOTP(user: any): Promise<any> {\n  return User.update(\n    { forgotPasswordOTP: user.forgotPasswordOTP },\n    { where: { id: user.id } }\n  );\n}\n\nexport function verifyAccount(user: any): Promise<any> {\n  return User.update(\n    { isVerified: 1 },\n    { where: { id: user.id } }\n  );\n}\n\n\nexport function changePassword(user: any): Promise<any> {\n  return User.update(\n    { password: CryptoJS.SHA512(user.password, process.env.EncryptionKEY).toString(), isVerified: 1 },\n    { where: { forgotPasswordOTP: user.forgotPasswordOTP } }\n  );\n}\n\nexport function setDriverProfile(driver: any, user: any): Promise<any> {\n  \n  return DriverProfile.create({\n    name: driver.name,\n    userId: user.id,\n    address: driver.address,\n    latitude: driver.latitude,\n    longitude: driver.longitude,\n    businessType: driver.businessType\n  })\n}\n\nexport function setCustomerProfile(customer: any, user: any): Promise<any> {\n  \n  return CustomerProfile.create({\n    name: customer.name,\n    userId: user.id,\n    address: customer.address,\n    latitude: customer.latitude,\n    longitude: customer.longitude,\n    businessType: customer.businessType,\n    accountNumber: customer.accountNumber,\n    ifsc: customer.ifsc,\n    bank_name: customer.bank_name,\n    phone_number: customer.phone_number,\n    gst: customer.gst,\n    firm_name: customer.firm_name,\n  })\n}\n\n"],"sourceRoot":"../../src"}